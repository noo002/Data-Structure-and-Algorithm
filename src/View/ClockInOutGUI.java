/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Control.DeliverymanList;
import Model.Deliveryman_1;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JFrame;
import Control.DeliverymanListInterface;
import java.text.DateFormat;
import java.util.Date;

/**
 *
 * @author Wee Kian Huat
 */
public class ClockInOutGUI extends javax.swing.JFrame {

    private String DeliveryManID;
    private Deliveryman_1[] dmList;
    DeliverymanListInterface<String> deliveryManNode;
    DeliverymanListInterface<String> manageDeliveryMan = new DeliverymanList<>();
    
    public ClockInOutGUI() {
        initComponents();
    }

    public void setDeliveryManID(String DeliveryManID){
         this.DeliveryManID = DeliveryManID;
    }
    
    public String getDeliveryManID(){
        return this.DeliveryManID;
    }

    public Deliveryman_1[] getDmList() {
        return dmList;
    }

    public void setDmList(Deliveryman_1[] dmList) {
        this.dmList = dmList;
    }
    
    public DeliverymanListInterface<String> getNode(){
        return this.deliveryManNode;
    }  
    
    public void setNode(DeliverymanListInterface<String> deliveryManNode ){
        this.deliveryManNode= deliveryManNode;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea1 = new javax.swing.JTextArea();
        clockInButton = new javax.swing.JButton();
        clockOutButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        clockinTextID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textDateTime = new javax.swing.JTextField();
        getCurrentTimeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("- ClockIn / Clock Out Screen -");

        textArea1.setEditable(false);
        textArea1.setColumns(20);
        textArea1.setRows(5);
        jScrollPane2.setViewportView(textArea1);

        clockInButton.setText("Clock In");
        clockInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockInButtonActionPerformed(evt);
            }
        });

        clockOutButton.setText("Clock Out");
        clockOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockOutButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Deliveryman ID :");

        clockinTextID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockinTextIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Date & Time :");

        getCurrentTimeButton.setText("Get Current Time");
        getCurrentTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getCurrentTimeButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(textDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(getCurrentTimeButton))
                    .addComponent(clockinTextID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(clockInButton)
                        .addGap(18, 18, 18)
                        .addComponent(clockOutButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton)
                        .addGap(15, 15, 15)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clockinTextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(getCurrentTimeButton)))
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clockInButton)
                    .addComponent(clockOutButton)
                    .addComponent(backButton)
                    .addComponent(clearButton))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clockInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockInButtonActionPerformed
        int TotalDeliveryMan = getAllDeliveryMan();
         String id = clockinTextID.getText();
         Deliveryman_1[] dMan = getDmList();
         
        
         
        for(int i=0; i<TotalDeliveryMan; i++){
          if(getNode() == null){
             if(id.equals(dMan[i].getID()) && dMan[i].getClockInTime().equals("null")){
                 
                
                     dMan[i].setClockInTime(clockIn());                    
                     
                     manageDeliveryMan.clockIn(dMan[i].getID());
                     dMan[i].setStatus(true);
//                     String  a = manageDeliveryMan.getFront();
//                     System.out.println(a);
                  //   jtaDetail.setText(manageDeliveryMan.getFront().toString() + " has clock in at :  " + clockIn());
                     setNode(manageDeliveryMan);
                     textArea1.setText(dMan[i].getName() + " had been successfully clocked in at " + dMan[i].getClockInTime());
                 
                    
             }
          }else if(id.equals(dMan[i].getID()) && dMan[i].getClockInTime().equals("null")){
              DeliverymanListInterface<String> hadData = getNode();
              
              dMan[i].setClockInTime(clockIn());
              hadData.clockIn(dMan[i].getID());
              dMan[i].setStatus(true);
              setNode(hadData);
              textArea1.setText(dMan[i].getName() + " had been successfully clocked in at " + dMan[i].getClockInTime());
          }
        }   
        this.dmList = dMan;
    }//GEN-LAST:event_clockInButtonActionPerformed

    private void clockOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockOutButtonActionPerformed
        int TotalDeliveryMan = getAllDeliveryMan();
        String id = clockinTextID.getText();
        Deliveryman_1[] dMan = getDmList();
        String time = "null";
        
        for(int i=0; i<TotalDeliveryMan; i++){
           if(getNode() == null){
               
            if(id.equals(dMan[i].getID())&& dMan[i].getClockOutTime().equals("null") && !dMan[i].getClockInTime().equals("null") ){
                
               
                
                     dMan[i].setClockOutTime(clockIn());                    
                     int o = manageDeliveryMan.getNode(id);   // get the position of the deliveryman who already in queue
                     String whoClockOut = manageDeliveryMan.clockOut(o); //pass in the position of delivery in order to clock out
                     dMan[i].setStatus(false);                    
                     setNode(manageDeliveryMan);
                     textArea1.setText(whoClockOut +" had been successfully clocked out at " + dMan[i].getClockOutTime());
                
            }
           }else if(id.equals(dMan[i].getID()) && dMan[i].getClockOutTime().equals("null") && !dMan[i].getClockInTime().equals("null")){
              
               
              DeliverymanListInterface<String> hadData = getNode();
              
              dMan[i].setClockOutTime(clockIn());
              int o = hadData.getNode(id);   // get the position of the deliveryman who already in queue
              String whoClockOut = hadData.clockOut(o); //pass in the position of delivery in order to clock out
              dMan[i].setStatus(false);
              setNode(hadData);
              textArea1.setText(dMan[i].getName() + " had been successfully clocked out at " + dMan[i].getClockOutTime());              
           }
        }
        this.dmList = dMan;
    }//GEN-LAST:event_clockOutButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        MainMenuGUI mainMenu = new MainMenuGUI();
        mainMenu.setNode(getNode());
        mainMenu.setdMan(dmList);
        //System.out.print(getNode().getNumberOfNode());
        mainMenu.setVisible(true);
        mainMenu.setSize (500, 500);
        mainMenu.setLocation (200, 100);
        mainMenu.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_backButtonActionPerformed

    private void clockinTextIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockinTextIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clockinTextIDActionPerformed

    private void getCurrentTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getCurrentTimeButtonActionPerformed
        Date now = new Date();
        DateFormat defaultDate = DateFormat.getDateTimeInstance();
        String nowString = defaultDate.format(now);
        textDateTime.setText(nowString);
    }//GEN-LAST:event_getCurrentTimeButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clockinTextID.setText("");
        textDateTime.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    public String clockIn(){
        String punchIn = "";
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd-M-yyyy hh:mm:ss");
        punchIn = sdf.format(cal.getTime()).toString();
        return punchIn;
    }
    
    public String availability(boolean status){
        String available ;
        if(status == false){
            available = "unavailable";
        }else
            available = "available";
        return available;
    }
    
    public int getAllDeliveryMan(){
        int totalDeliveryMan =0;
        Deliveryman_1[] dMan = getDmList();
        for(int i=0; i<dMan.length; i++){
            if(dMan[i] != null){
                totalDeliveryMan++;
            }
        }     
        return totalDeliveryMan;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClockInOutGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClockInOutGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClockInOutGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClockInOutGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        ClockInOutGUI cGUI = new ClockInOutGUI ();
        cGUI.setVisible (true);
        cGUI.setSize (500, 500);
        cGUI.setLocation (200, 100);
        cGUI.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton clockInButton;
    private javax.swing.JButton clockOutButton;
    private javax.swing.JTextField clockinTextID;
    private javax.swing.JButton getCurrentTimeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textArea1;
    private javax.swing.JTextField textDateTime;
    // End of variables declaration//GEN-END:variables
}
